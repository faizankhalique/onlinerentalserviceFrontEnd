expected errors
for get method
toast.error(
        `Error :${error.response.status} [Students ${
          error.response.statusText
        }]`
      ); 
for getbyid method
if ( error.response.status === 400) {
        toast.error(`Error :400 [${error.response.data}]`);
        this.props.history.replace("/not-found");
      } else if ( error.response.status === 404)
        toast.error(`This movie Student been deleted:404 (not found)`);
      else toast.error(`${error.response.data}`);

for delete method
if ( error.response.status === 400)
        toast.error(`Error:400 ${error.response.data}`);
      else if ( error.response.status === 404)
        toast.error(`This degree been deleted:404 (not found)`);
      else if ( error.response.status === 401)
        toast.error(
          `Error:401 ${error.response.statusText}`
        );
      else if ( error.response.status === 403)
        toast.error(
          `Error:403 ${error.response.statusText}`
        );
      else toast.error(`${error.response.data}`);
for post or update
if (error.response.status === 400)
        toast.error(`Error:400 ${error.response.statusText}`);
      else if (error.response.status === 404)
        toast.error("Not found Error status:404");
      else if (error.response.status === 403)
        toast.error(`Error:403 ${error.response.statusText}`);
      else toast.error("" + error);
for login
if (error.response.status === 400) {
        toast.error(`Error :400 ${error.response.data}`);
        const errors = { ...this.state.errors };
        error.response.data == "Invalid Username"
          ? (errors.username = "Invalid Username")
          : (errors.password = "Invalid Password");
        this.setState({ errors });
      } else if (error.response.status === 404)
        toast.error(`Error :404 ${error.response.data}`);
      else toast.error(`${error.response.data}`);
for register users